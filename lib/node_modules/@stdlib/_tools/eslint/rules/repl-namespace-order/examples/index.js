/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

var Linter = require( 'eslint' ).Linter;
var rule = require( './../lib' );

var linter = new Linter();
var result;
var code;

code = [
	'/* When adding names to the namespace, ensure that they are added in alphabetical order according to alias (namespace key). */',
	'',
	'ns.push({',
	'  \'alias\': \'hasInt32ArraySupport\',',
	'  \'path\': \'@stdlib/assert/has-int32array-support\',',
	'  \'value\': require( \'@stdlib/assert/has-int32array-support\' ),',
	'  \'type\': \'Function\',',
	'  \'related\': []',
	'});',
	'',
	'ns.push({',
	'  \'alias\': \'hasInt8ArraySupport\',',
	'  \'path\': \'@stdlib/assert/has-int8array-support\',',
	'  \'value\': require( \'@stdlib/assert/has-int8array-support\' ),',
	'  \'type\': \'Function\',',
	'  \'related\': []',
	'});',
	'',
	'ns.push({',
	'  \'alias\': \'hasMapSupport\',',
	'  \'path\': \'@stdlib/assert/has-map-support\',',
	'  \'value\': require( \'@stdlib/assert/has-map-support\' ),',
	'  \'type\': \'Function\',',
	'  \'related\': []',
	'});'
].join( '\n' );

linter.defineRule( 'repl-namespace-order', rule );

result = linter.verify( code, {
	'rules': {
		'repl-namespace-order': 'error'
	}
});
console.log( result );
/* =>
	{
		'ruleId': 'repl-namespace-order',
		'severity': 2,
		'message': '"hasInt8ArraySupport" should come before "hasInt32ArraySupport"',
		'line': 13,
		'column': 9,
		'nodeType': 'ObjectExpression',
		'endLine': 19,
		'endColumn': 2
	}
*/
