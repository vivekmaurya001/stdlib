/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// VARIABLES //

var opts = {
	'globals': [
		'ArrayBuffer',
		'Buffer',
		'DataView',
		'Float32Array',
		'Float64Array',
		'Int8Array',
		'Int16Array',
		'Int32Array',
		'SharedArrayBuffer',
		'Uint8Array',
		'Uint8ClampedArray',
		'Uint16Array',
		'Uint32Array'
	]
};


// MAIN //

var invalid = [];
var test;

test = {
	'code': [
		'// VARIABLES //',
		'',
		'var arr = new Int32Array( [1,2,3] );'
	].join( '\n' ),
	'errors': [
		{
			'message': 'Int32Array is used without loading it beforehand via require()',
			'type': 'Identifier'
		}
	],
	'options': [ opts ]
};
invalid.push( test );

test = {
	'code': [
		'// VARIABLES //',
		'',
		'var ctor = Int32Array;'
	].join( '\n' ),
	'errors': [
		{
			'message': 'Int32Array is used without loading it beforehand via require()',
			'type': 'Identifier'
		}
	],
	'options': [ opts ]
};
invalid.push( test );

test = {
	'code': [
		'// MAIN //',
		'',
		'function dice() {',
		'  return new Int32Array( [1,2,3,4,5,6] );',
		'}'
	].join( '\n' ),
	'errors': [
		{
			'message': 'Int32Array is used without loading it beforehand via require()',
			'type': 'Identifier'
		}
	],
	'options': [ opts ]
};
invalid.push( test );

test = {
	'code': [
		'var push = require( \'@stdlib/utils/push\' )',
		'',
		'var arr = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];',
		'',
		'arr = push( arr, 6.0, 7.0 );',
		'// returns [ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0 ]',
		'',
		'arr = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );',
		'// returns <Float64Array>[ 1.0, 2.0, 3.0, 4.0, 5.0 ]'
	].join( '\n' ),
	'errors': [
		{
			'message': 'Float64Array is used without loading it beforehand via require()',
			'type': 'Identifier'
		}
	],
	'options': [ opts ]
};
invalid.push( test );

test = {
	'code': [
		'/**',
		'* Multiply matrices x and y.',
		'*',
		'* @private',
		'* @param {Float64Array} x - first input matrix',
		'* @param {Float64Array} y - second input matrix',
		'* @returns {Float64Array} matrix product',
		'*/',
		'function mmult( x, y ) {',
		'	var i;',
		'	var j;',
		'	var k;',
		'	var s;',
		'	var z;',
		'',
		'	z = new Float64Array( m * m );',
		'	for ( i = 0; i < m; i++ ) {',
		'		for ( j = 0; j < m; j++ ) {',
		'			s = 0;',
		'			for ( k = 0; k < m; k++ ) {',
		'				s += x[ (i*m) + k ] * y[ (k*m) + j ];',
		'				z[ (i*m) + j ] = s;',
		'			}',
		'		}',
		'	}',
		'	return z;',
		'}'
	].join( '\n' ),
	'errors': [
		{
			'message': 'Float64Array is used without loading it beforehand via require()',
			'type': 'Identifier'
		}
	],
	'options': [ opts ]
};
invalid.push( test );


// EXPORTS //

module.exports = invalid;
