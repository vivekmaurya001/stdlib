/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var mean = require( '@stdlib/stats/base/mean' );
var absf = require( '@stdlib/math/base/special/absf' );
var exp = require( '@stdlib/math/base/special/exp' );
var expf = require( './../lib' );


// FIXTURES //

var data = require( './fixtures/julia/data.json' );


// MAIN //

var customErrs;
var nativeErrs;
var yexpected;
var ycustom;
var ynative;
var x;
var i;

x = data.x;
yexpected = data.expected;
ycustom = new Array( x.length );
ynative = new Array( x.length );
for ( i = 0; i < x.length; i++ ) {
	ycustom[ i ] = expf( x[ i ] );
	ynative[ i ] = exp( x[ i ] );
}

customErrs = new Array(x.length);
nativeErrs = new Array(x.length);

for (i = 0; i < x.length; i++) {
	customErrs[i] = absf((ycustom[i] - yexpected[i]) / yexpected[i]);
	nativeErrs[i] = absf((ynative[i] - yexpected[i]) / yexpected[i]);
}

console.log( 'The mean relative error of exp compared to Julia is %d', mean( x.length, nativeErrs, 1 ) );
console.log( 'The mean relative error of this module compared to Julia is %d', mean( x.length, customErrs, 1 ) );
