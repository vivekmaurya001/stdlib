#/
# @license Apache-2.0
#
# Copyright (c) 2023 The Stdlib Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#/

# Workflow name:
name: update_error_databases

# Workflow triggers:
on:
  schedule:
    # Run the workflow once a week (Sunday at midnight):
    - cron: '0 0 * * 0'

  # Allow the workflow to be manually run:
  workflow_dispatch:

# Global permissions:
permissions:
  # Allow read-only access to the repository contents:
  contents: read

# Workflow jobs:
jobs:

  # Define a job for updating the error databases:
  update:

    # Define a display name:
    name: 'Update Error Databases'

    # Ensure the job does not run on forks:
    if: github.repository == 'stdlib-js/stdlib'

    # Define the type of virtual host machine:
    runs-on: ubuntu-latest

    # Define the sequence of job steps...
    steps:

      # Checkout the repository:
      - name: 'Checkout repository'
        # Pin action to full length commit SHA
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          # Specify whether to remove untracked files before checking out the repository:
          clean: true

          # Limit clone depth to the most recent commit:
          fetch-depth: 1

          # Specify whether to download Git-LFS files:
          lfs: false
        timeout-minutes: 10

      # Install Node.js:
      - name: 'Install Node.js'
        # Pin action to full length commit SHA
        uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af # v4.1.0
        with:
          node-version: '20' # 'lts/*'
        timeout-minutes: 5

      # Install dependencies (accounting for possible network failures, etc, when installing node module dependencies):
      - name: 'Install dependencies'
        run: |
          make install-node-modules || make install-node-modules || make install-node-modules
        timeout-minutes: 15

      # Update the error databases:
      - name: 'Update error databases'
        run: |
          node lib/node_modules/@stdlib/error/tools/database/scripts/build.js
          node lib/node_modules/@stdlib/error/tools/pkg2id/scripts/build.js
          node lib/node_modules/@stdlib/error/tools/id2pkg/scripts/build.js

      # Check if there are any changes to the error databases:
      - name: 'Check for changes'
        id: check_changes
        run: |
          if [ -z "$(git diff lib/node_modules/@stdlib/error/tools/database/data/data.csv | grep '^+')" ]; then
            echo "No changes detected in error databases. Skipping PR creation."
            echo "has_changes=false" >> $GITHUB_OUTPUT
          else
            echo "Changes detected in error databases."
            echo "has_changes=true" >> $GITHUB_OUTPUT
          fi

      # Generate comment with Markdown table of added error codes:
      - name: 'Generate comment body with Markdown table of added error codes'
        if: steps.check_changes.outputs.has_changes == 'true'
        run: |
          # Save the added lines from the diff to a temporary file:
          git diff lib/node_modules/@stdlib/error/tools/database/data/data.csv | grep '^+' | sed 's/^+//' > /tmp/diff.csv

          # Convert the CSV file to a TSV file (and drop first line and double quotes):
          awk -F '",' 'NR > 1 && !/^++/ { gsub(/^"|"$/, "", $1); gsub(/^"|"$/, "", $2); gsub(/^"|"$/, "", $3); print $1 "\t" $2 "\t" $3 }' /tmp/diff.csv > /tmp/diff.tsv

          # Create the Markdown table header:
          table="| Code | Error Message | Type |\n|------|---------------|------|\n"

          # Extract added lines from the diff and append them to the Markdown table:
          while IFS=$'\t' read -r code error_message type; do
            # Check if the table length exceeds a maximum length:
            if [ ${#table} -gt 65000 ]; then
              table+="| ... | ... | ... |\nThis table has been truncated due to GitHub's comment character limit.\n"
              break
            fi

            # Append the TSV row to the Markdown table:
            table+="| ${code} | ${error_message} | ${type} |\n"
          done < /tmp/diff.tsv

          # Generate a comment body:
          body="This PR\n\n-   updates the error databases\n\nThe following error codes were added:\n\n${table}"

          # Escape '%' characters, which are interpreted as format specifiers by `printf`:
          body="${body//%/%%}"

          # Write the comment body to a temporary file:
          printf "$body" > /tmp/body.md
        shell: bash

      # Disable Git hooks:
      - name: 'Disable Git hooks'
        if: steps.check_changes.outputs.has_changes == 'true'
        run: |
          rm -rf .git/hooks

      # Import GPG key to sign commits:
      - name: 'Import GPG key to sign commits'
        if: steps.check_changes.outputs.has_changes == 'true'
        # Pin action to full length commit SHA
        uses: crazy-max/ghaction-import-gpg@cb9bde2e2525e640591a934b1fd28eef1dcaf5e5 # v6.2.0
        with:
          gpg_private_key: ${{ secrets.STDLIB_BOT_GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.STDLIB_BOT_GPG_PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true

      # Create a pull request with the updated declarations:
      - name: 'Create pull request'
        if: steps.check_changes.outputs.has_changes == 'true'
        id: cpr
        # Pin action to full length commit SHA
        uses: peter-evans/create-pull-request@67ccf781d68cd99b580ae25a5c18a1cc84ffff1f # v7.0.6
        with:
          title: 'feat: update error databases'
          body-path: /tmp/body.md
          commit-message: 'feat: update error databases'
          committer: 'stdlib-bot <82920195+stdlib-bot@users.noreply.github.com>'
          signoff: true
          token: ${{ secrets.PULL_REQUEST_TOKEN }}
          labels: |
            documentation
            automated-pr
          team-reviewers: |
            reviewers
          branch: update-error-databases
          delete-branch: true
